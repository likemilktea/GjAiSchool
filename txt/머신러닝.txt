이명훈
정세연

# 파이썬 버전 바꾸기
파이썬 환경설정
- Python 3.8버전으로 실행하기

anaconda prompt
- 새로운 환경 만들기
  > conda create -n machine python==3.8

- 만들어진 환경 확인하기
  > conda env list

- 환경 변경하기(접근)
  > activate machine

- 환경에대한 기초 설정
  > 여러가지 라이브러리 설치
   pip install numpy pandas matplotlib scikit-learn

500 오류시
pip install --upgrade jupyterhub
pip install --upgrade --user nbconvert
conda install nbconvert==5.4.1
pip install --upgrade jupyter

평가지표
- accuracy(정확도)
- recall(재현율)
- precision(정밀도)
- f1 score

분류 vs 회귀
 - 분류 : 정해진 정답이 있다.
         정해진 값(숫자)을 예측        

 - 회귀 : 정해진 정답은 없다.
              범위는 있다.
         연속적인 숫자를 예측


1. 문제정의
 - 해결하고싶은 문제 정의
 - 미스터리사인 규칙찾기
 - 지도 > 회귀

2. 데이터 수집
 - n1(0~99), n2(0~99), result

3. 데이터 전처리
 - list > DataFrame
 - 이상치, 결측치

4. 탐색적 데이터 분석
 - 데이터를 자세하게 살펴보면서
 - 데이터를 파악하기

5. 모델 선택, 하이퍼 파라미터 튜닝
 - 데이터에 어울리는 모델 선택
 - 모델을 세부적으로 조정

6. 학습
 - fit(문제, 정답)
 - 문제로 정답을 도출하기위한 규칙       
     찾는 단계
 - 모델이 생각하는 가장 잘 맞는 규칙
    한가지를 저장

7. 예측, 평가
 - 만들어진 규칙을 토대로 새로운 값에대한 예측을 진행
 - 만들어진 규칙이 잘 만들어진건지 판단


일반화
 - 훈련 세트로 학습한 모델이 테스트 세트에 대해 정확히 예측하도록 하는 것

과대적합
 - 훈련세트에 너무 맞추어져 있어 테스트 세트의 성능 저하

과소적합
 - 훈련 세트를 충분히 반영하지 못해 훈련 세트, 테스트 세트에서 모두 성능이 저하

1. 모델 배우기
  - Desision Tree
2. 실습 데이터로 실습하기
  - Titanic 데이터
3. 추가적으로 알아두면 좋은 내용
  - 3단계 데이터 전처리, 4단계 탐색적 에디터 분석을 강화해서 배울 예정

 - 작업당 소모되는 시간 약-
1. 문제정의 5%
2. 데이터 수집 50%
3. 데이터 전처리 15%
4. 탐색적 데이터 분석 15%

5. 모델 선택 및 하이퍼 파라미터 튜닝
6. 학습
7 .평가 및 예측
~15%~ 가량

1) 데이터는 얼마나 모아야 하나요?
 - 정답은 없다. 많을수록 좋다.
 - 클래스당 최소 1000장

2) 학습결과에 가장 영향을 많이 끼치는 요소
 - 1. 데이터
 - 2. 머신러닝 모델을
 - 3. 학습 및 하이퍼 파라미터 튜닝

 https://graphviz.gitlab.io/_pages/Download/Download_windows.html
 다운 및 설치 8.0.1 win64
 program files > graphviz >
 시스템 환경 변수 편집> path > 새로만들기 > 찾아보기 > 위 폴더의 bin폴더 >확인, 확인
 시스템 환경 변수 편집> 시스템 > 새로만들기 > 찾아보기 > 위 폴더의 bin폴더 > 경로 수정 dot.exe

 배깅 vs 부스팅
 - 부스팅 : 일반적으로 학습데이터의 개수가 적을 때 다수의 학습 데이터 대신에
    이전 데이터의 오차를 고려하여 주어진 학습 데이터를 가중치를 변경하면서 
    여러번 반복 추출하여 활용(AdaBoost, GradientBoost, XGBoost)
  
 - 배깅 (Boostrap Aggregation): 약간 다른 독립된 훈련 데이터 세트트를 여러개
    생성하는 것으로 통계적 학습(머신러닝)의 결과 분산을 줄이면 알고리즘 ->overfitting감소
    ->이산 데이터인 경우에는 투표(voting)방식, 연속 데이터인 경우에는 평균으로 집계(RandomForest 등)