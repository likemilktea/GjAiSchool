DOM(Document Object Modle : 문서객체모델)
- 웹 문서에 정의된 태그를 JavaScript에서 접근할 수 있도록 객체로 변환해주는 모델

HTML문서 내에 있는 요소에 접근하려면
document : 현재 문서
 . : 현재문서 내에 있는 속성 또는 함수에 접근
getElementById() : 요소의 id속성값을 이용해서 요소객체에 접근
const tit = document.getElementById("tit");

console.log(`h1요소 접근 결과 : ${tit}`);

접근한 요소의 컨텐츠에 접근하려면
요소객체.innerText : 요소의 컨텐츠만에 접근(문자열)
요소객체.innetHTML : 요소의 컨텐츠+자식요소에 접근(문자열)
console.log(tit.innerText);
console.log(tit.innerHTML);

접근한 요소의 컨텐츠를 업데이트(초기화)하려면
요소객체.innerText = 수정할 데이터
tit.innerText = tit.innerText+"요소에 접근 또 성공!"

요소의 컨텐츠를 업데이트할 때 새로운 요소를 반영하고 싶다면
요소객체.innerHTML = 요소+데이터 형태
tit.innerHTML = "<a href='https://www.naver.com'>요소에 접근 성공</a>"

a요소의 글자색을 파란색으로 변경을 하려면
HTML Collection : 유사배열
const aTag = tit.getElementsByTagName("a")[0];
console.log(aTag);

요소객체.style.스타일속성 = "변경할 값";

- 
1. 태그 자체에 이벤트 적용해보기
- 'on이벤트명' = 자바스크립트 문법;
- 이벤트가 발생했을 때 정의된 자바스크립트 코드를 실행

<button onclick="alert('클릭이벤트 실행!')">클릭</button>
<button id="btn1">button1</button>
<button id="btn2">button2</button>

이벤트(Event)
- 사용자가 브라우저에서 하는 행위
ex) 마우스를 클릭했을 때, 키보드를 눌렀을 때, 입력칸에 커서를 두었을 때 등의 행위

이벤트 핸들러(Event Handler)
- 이벤트가 발생했을 때 동작하는 함수

const btn1 = document.getElementById("btn1");
const btn2 = document.getElementById("btn2");

2-1. 요소객체에 이벤트 적용해보기
btn1.onclick = () => {
alert("클릭입벤트 실행2!");
}

2-2. 함수를 이용한 이벤트 적용해보기
btn2.addEventListener("click", () => {
    alert("클릭이벤트 실행3")
});

실행할 로직이 복잡할 경우에는 아래와 같이 함수형태로 먼저 정의한 다음에
이벤트 핸들러 위치에 함수명만 작성
const executeFunc = () =>{
alert("클릭이벤트 실행3");
}

()를 붙이지 않는 이유 -> 자바스크립트 코드가 실행될 때 함수호출을 만나면
무조건 먼저 실행하게 되어 있기 때문에 ()를 붙이지 않는다!!