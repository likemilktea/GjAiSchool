임명진 선생님

*입출력

출력문
1.웹 문서에 출력하는 기능
+태그도 같이 적용
기존 내용을 전부 지움
document.write("Hello, JavaScript!");
document.write("<h1>JavaScript<h1>");

2.알림창
+ 기능처리에 대한 결과를 사용자에게 알려줄 때 사용
alert("Hello, JavaScript");

3.개발자도구 -콘솔창에 출력하는 기능
+실제 개발 후 결과값을 확인할 때 주로 사용
console.log("Hello, JavaScript");

입력문
1.키보드의 입력값을 반환하는 기능
let name;
console.log(name=prompt("이름을 입력하시오"));
document.write(name);

2.확인/취소를 선택하여 참/거짓을 반환하는 기능
confirm("변경된 정보를 반영하겠습니까?");


*변수 자료형

변수 : 데이터를 저장할 수 있는 공간
변수선언 키워드 : var, let, const
변수의 특징
- 데이터를 저장했을 때 자료형이 결정된다.
- 선언만 했을 경우, 자료형은 undefined이다.

var 특징
- 중복 선언이 가능하다 --> 오류를 일으킬 가능성
  **-> 변수 호이스팅**
   + 선언된 변수를 맨 위로 올려서 정의하는 방식

변수 선언과 초기화
let의 특징
- 중복 선언이 불가능하다

const의 특징
- 중복 선언이 불가능하다.
- 새로운 값으로 변경이 불가능하다
* 객체를 정의할 때 사용


자료형
1.기본타입 : string, number, boolean, null, undefined
null vs undefined
- null : 데이터가 비어있다는 의미 + object타입 + 저장공간 존재
- undefined : 데이터가 비어있다는 의미 + 자료형 X + 저장공간 X

2.참조타입 : array, object etc...


연산자

1. 산술연산자: + - * /(나누기) %(나머지)
실수 -> 정수로 변환
document.writeln(parseInt(5/2));

2. 증감연산자 : ++, --
- 연산자를 앞 또는 뒤에 작성했을 때 연산되는 순서가 달라진다.
- ex) num2++ : 변수를 먼저 사용한 후 +1
     ++num2 : +1을 연산한 다음에 변수에 반영
 num2++ => num = num + 1 or num += 1

3. 대입(할당)연산자: =, +=, -=, *=, /=, %=

4. 비교연산자 : ==, !=, ===, !==, <, >, <=, >=
== : 동등 연산자 -> 숫자데이터와 비교 시 자동형변환하여 비교
=== : 일치 연산자 -> 자료형과 데이터 모두 비교
*비교 연산자는 숫자데이터와 비교 시 자동 형변환을 하기 때문에
자료형을 맞춰준 후 비교해야 한다.

5. 논리연산자 : &&(AND), ||(OR), !(NOT)
&&연산자 : 두 비교식이 모두 true일 때 결과는 true
먼저 나온 비교식의 결과가 false인 경우에는
뒤에 나오는 비교식을 판단하지 않는다.

||연산자 : 둘 중 하나의 비교식이 true일 때 결과는 true

!연산자 : 결과값을 반대로 변환하는 연산자
- 비교식을 정의할 때 개발자의 판단에 따라 달라질 수 있음
- 일치하는 비교식을 만들 것인지
- 불일치하는 비교식을 만들 것인지

6. 삼항연산자 : 비교식 ? true : false

